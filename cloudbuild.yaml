secrets:
  - kmsKeyName: projects/28745226556/locations/us-central1/keyRings/auth-token/cryptoKeys/tpr-token-crypto
    secretEnv:
      GITHUB_TOKEN: projects/28745226556/secrets/GithubToken

steps:
- name: 'golang:1.19'
  id: 'Run tests'
  env: ['GO111MODULE=on', 'LOG_LEVEL=1', 'LOG_FILE=mylog.log', 'GITHUB_TOKEN=${_GITHUB_TOKEN}']
  args: ['go', 'test', './...']

- name: 'gcr.io/cloud-builders/docker'
  id: build_docker_image
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    docker build -t gcr.io/$PROJECT_ID/SERVICE_NAME:$SHORT_SHA - <<EOF
    # Write your Dockerfile instructions here, for example:
    FROM golang:1.19 AS build

    WORKDIR /app

    COPY go.mod go.sum ./

    RUN go mod download

    COPY . .

    RUN CGO_ENABLED=0 GOOS=linux go build -o main .

    FROM alpine:3.14

    WORKDIR /app

    COPY --from=build /app/main /app/main

    EXPOSE 8080

    ENV PORT 8080

    ENV LOG_LEVEL 2
    
    ENV LOG_FILE mylog.log

    CMD ["/app/main"]
    EOF

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/trusted-package-registry/team24:$SHORT_SHA']

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud'
  args:
  - 'run'
  - 'deploy'
  - 'team24'
  - '--image'
  - 'gcr.io/trusted-package-registry/team24:$SHORT_SHA'
  - '--region'
  - 'us-central1'
  - '--platform'
  - 'managed'
  - '--allow-unauthenticated'

